import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Step 1: Create synthetic stock data
data = {
    "Date": pd.date_range(start="2023-01-01", periods=15, freq="D"),
    "Open": [100.5, 101.2, 102.1, 102.8, 103.7, 104.3, 105.0, 104.6, 103.9, 104.5, 105.3, 106.0, 106.7, 107.2, 107.8],
    "High": [101.8, 102.6, 103.3, 104.2, 104.9, 105.6, 106.1, 105.7, 105.0, 105.6, 106.4, 107.1, 107.8, 108.3, 109.0],
    "Low": [99.7, 100.3, 101.1, 102.0, 102.9, 103.5, 104.2, 103.9, 103.1, 103.6, 104.4, 105.2, 105.8, 106.4, 106.9],
    "Close": [100.9, 101.5, 102.4, 103.5, 104.0, 104.8, 105.4, 104.3, 104.2, 104.9, 105.7, 106.5, 107.1, 107.6, 108.2]
}

df = pd.DataFrame(data)
df.to_csv("synthetic_stock_data.csv", index=False)

# Step 2: Load the CSV
df = pd.read_csv("synthetic_stock_data.csv", parse_dates=["Date"])
df.set_index("Date", inplace=True)

# Step 3: Analysis

# Moving Averages
df["MA_3"] = df["Close"].rolling(window=3).mean()
df["MA_5"] = df["Close"].rolling(window=5).mean()

# Daily Returns
df["Daily_Return"] = df["Close"].pct_change()

# Volatility (Rolling Std Dev of Returns)
df["Volatility_3"] = df["Daily_Return"].rolling(window=3).std()

# Step 4: Visualization

# Close Price & Moving Averages
plt.figure(figsize=(12, 5))
plt.plot(df["Close"], label="Close", marker="o")
plt.plot(df["MA_3"], label="3-Day MA", linestyle="--")
plt.plot(df["MA_5"], label="5-Day MA", linestyle=":")
plt.title("Close Price and Moving Averages")
plt.xlabel("Date")
plt.ylabel("Price")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

# Daily Returns
plt.figure(figsize=(12, 4))
df["Daily_Return"].plot(kind="bar", color="skyblue")
plt.title("Daily Return")
plt.xlabel("Date")
plt.grid(True)
plt.tight_layout()
plt.show()

# Volatility
plt.figure(figsize=(12, 4))
df["Volatility_3"].plot(color="red")
plt.title("3-Day Rolling Volatility")
plt.xlabel("Date")
plt.ylabel("Volatility")
plt.grid(True)
plt.tight_layout()
plt.show()

# Correlation Heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(df[["Open", "High", "Low", "Close"]].corr(), annot=True, cmap="coolwarm", linewidths=0.5)
plt.title("Correlation Matrix")
plt.tight_layout()
plt.show()

